/**
 *  Clover: Quantized 4-bit Linear Algebra Library
 *              ______ __
 *             / ____// /____  _   __ ___   _____
 *            / /    / // __ \| | / // _ \ / ___/
 *           / /___ / // /_/ /| |/ //  __// /
 *           \____//_/ \____/ |___/ \___//_/
 *
 *  Copyright 2018 Alen Stojanov       (astojanov@inf.ethz.ch)
 *                 Tyler Michael Smith (tyler.smith@inf.ethz.ch)
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

#include <CloverVector32.h>
#include <CloverMatrix32.h>
#include "../accuracy/01_math.h"
#include "01_measure.h"

experiment_setup_t iht_experiment_mixed [] = {
        {
                /*  4-bit */  {     3,   0.0048838025f,  0.7944982052f },
                /*  8-bit */  {     4,   0.0048838025f,  0.7944982052f },
                /* 16-bit */  {     3,   0.0053720828f,  0.7944982052f },
                /* 32-bit */  {     3,   0.0053720828f,  0.7944982052f },
        },{
                /*  4-bit */  {     3,   0.0024424014f,  0.7999008894f },
                /*  8-bit */  {     4,   0.0019541210f,  0.7999008894f },
                /* 16-bit */  {     3,   0.0024424014f,  0.7999008894f },
                /* 32-bit */  {     3,   0.0024424014f,  0.7999008894f },
        },{
                /*  4-bit */  {     2,   0.0009775605f,  0.8338871598f },
                /*  8-bit */  {     2,   0.0009775605f,  0.8338871598f },
                /* 16-bit */  {     2,   0.0009775605f,  0.8338871598f },
                /* 32-bit */  {     2,   0.0009775605f,  0.8338871598f },
        },{
                /*  4-bit */  {     3,   0.0004892803f,  0.8047081828f },
                /*  8-bit */  {     3,   0.0006113503f,  0.8047081828f },
                /* 16-bit */  {     3,   0.0006113503f,  0.8047081828f },
                /* 32-bit */  {     3,   0.0006113503f,  0.8047081828f },
        },{
                /*  4-bit */  {     3,   0.0002451401f,  0.8079025745f },
                /*  8-bit */  {     3,   0.0002451401f,  0.8079025745f },
                /* 16-bit */  {     3,   0.0002451401f,  0.8079025745f },
                /* 32-bit */  {     3,   0.0002451401f,  0.8079025745f },
        },{
                /*  4-bit */  {     3,   0.0001841051f,  0.8037819266f },
                /*  8-bit */  {     3,   0.0001841051f,  0.8037819266f },
                /* 16-bit */  {     3,   0.0001841051f,  0.8037819266f },
                /* 32-bit */  {     3,   0.0001841051f,  0.8037819266f },
        },{
                /*  4-bit */  {     3,   0.0001535876f,  0.8040409088f },
                /*  8-bit */  {     3,   0.0001535876f,  0.8040409088f },
                /* 16-bit */  {     3,   0.0001535876f,  0.8040409088f },
                /* 32-bit */  {     3,   0.0001535876f,  0.8040409088f },
        },{
                /*  4-bit */  {     3,   0.0001230701f,  0.8160584569f },
                /*  8-bit */  {     3,   0.0001230701f,  0.8160584569f },
                /* 16-bit */  {     3,   0.0001230701f,  0.8160584569f },
                /* 32-bit */  {     3,   0.0001230701f,  0.8160584569f },
        },{
                /*  4-bit */  {     3,   0.0000925526f,  0.8089352846f },
                /*  8-bit */  {     3,   0.0000925526f,  0.8089352846f },
                /* 16-bit */  {     3,   0.0000925526f,  0.8089352846f },
                /* 32-bit */  {     3,   0.0000925526f,  0.8089352846f },
        },{
                /*  4-bit */  {     3,   0.0000620350f,  0.8155213594f },
                /*  8-bit */  {     3,   0.0000925526f,  0.8155213594f },
                /* 16-bit */  {     2,   0.0000925526f,  0.8155213594f },
                /* 32-bit */  {     3,   0.0000925526f,  0.8155213594f },
        },{
                /*  4-bit */  {     3,   0.0000620350f,  0.8148086071f },
                /*  8-bit */  {     2,   0.0000772938f,  0.8148086071f },
                /* 16-bit */  {     2,   0.0000772938f,  0.8148086071f },
                /* 32-bit */  {     2,   0.0000772938f,  0.8148086071f },
        },{
                /*  4-bit */  {     3,   0.0000620350f,  0.8023736477f },
                /*  8-bit */  {     3,   0.0000620350f,  0.8023736477f },
                /* 16-bit */  {     3,   0.0000620350f,  0.8023736477f },
                /* 32-bit */  {     3,   0.0000620350f,  0.8023736477f },
        },{
                /*  4-bit */  {     3,   0.0000620350f,  0.8149573803f },
                /*  8-bit */  {     2,   0.0000620350f,  0.8149573803f },
                /* 16-bit */  {     2,   0.0000620350f,  0.8149573803f },
                /* 32-bit */  {     2,   0.0000620350f,  0.8149573803f },
        },{
                /*  4-bit */  {     3,   0.0000620350f,  0.8127582669f },
                /*  8-bit */  {     2,   0.0000620350f,  0.8127582669f },
                /* 16-bit */  {     2,   0.0000620350f,  0.8127582669f },
                /* 32-bit */  {     2,   0.0000620350f,  0.8127582669f },
        },{
                /*  4-bit */  {     2,   0.0000467763f,  0.8170416951f },
                /*  8-bit */  {     2,   0.0000467763f,  0.8170416951f },
                /* 16-bit */  {     2,   0.0000467763f,  0.8170416951f },
                /* 32-bit */  {     2,   0.0000467763f,  0.8170416951f },
        },{
                /*  4-bit */  {     3,   0.0000467763f,  0.8090879321f },
                /*  8-bit */  {     3,   0.0000467763f,  0.8090879321f },
                /* 16-bit */  {     3,   0.0000467763f,  0.8090879321f },
                /* 32-bit */  {     3,   0.0000467763f,  0.8090879321f },
        },{
                /*  4-bit */  {     3,   0.0000315175f,  0.8128677607f },
                /*  8-bit */  {     2,   0.0000315175f,  0.8128677607f },
                /* 16-bit */  {     2,   0.0000315175f,  0.8128677607f },
                /* 32-bit */  {     2,   0.0000315175f,  0.8128677607f },
        },{
                /*  4-bit */  {     3,   0.0000467763f,  0.8138308525f },
                /*  8-bit */  {     3,   0.0000467763f,  0.8138308525f },
                /* 16-bit */  {     3,   0.0000467763f,  0.8138308525f },
                /* 32-bit */  {     3,   0.0000467763f,  0.8138308525f },
        },{
                /*  4-bit */  {     3,   0.0000315175f,  0.8146244884f },
                /*  8-bit */  {     2,   0.0000315175f,  0.8146244884f },
                /* 16-bit */  {     2,   0.0000315175f,  0.8146244884f },
                /* 32-bit */  {     2,   0.0000315175f,  0.8146244884f },
        }
};

experiment_setup_t gd_experiment_mixed [] = {
        {
                /*  4-bit */  {   26,   0.4000000358f,  0.1548279077f },
                /*  8-bit */  {   20,   0.4000000358f,  0.1548279077f },
                /* 16-bit */  {   19,   0.4000000358f,  0.1548279077f },
                /* 32-bit */  {   19,   0.4000000358f,  0.1548279077f },
        },{
                /*  4-bit */  {   27,   0.3500000238f,  0.1622792184f },
                /*  8-bit */  {   15,   0.4000000358f,  0.1622792184f },
                /* 16-bit */  {   15,   0.4000000358f,  0.1622792184f },
                /* 32-bit */  {   15,   0.4000000358f,  0.1622792184f },
        },{
                /*  4-bit */  {   24,   0.4000000358f,  0.1758877337f },
                /*  8-bit */  {   17,   0.4000000358f,  0.1758877337f },
                /* 16-bit */  {   16,   0.4000000358f,  0.1758877337f },
                /* 32-bit */  {   16,   0.4000000358f,  0.1758877337f },
        },{
                /*  4-bit */  {   24,   0.4000000358f,  0.1700959951f },
                /*  8-bit */  {   15,   0.4000000358f,  0.1700959951f },
                /* 16-bit */  {   15,   0.4000000358f,  0.1700959951f },
                /* 32-bit */  {   15,   0.4000000358f,  0.1700959951f },
        },{
                /*  4-bit */  {   23,   0.4000000358f,  0.1658548266f },
                /*  8-bit */  {   14,   0.4000000358f,  0.1658548266f },
                /* 16-bit */  {   14,   0.4000000358f,  0.1658548266f },
                /* 32-bit */  {   14,   0.4000000358f,  0.1658548266f },
        },{
                /*  4-bit */  {   23,   0.4000000358f,  0.1686387658f },
                /*  8-bit */  {   15,   0.4000000358f,  0.1686387658f },
                /* 16-bit */  {   15,   0.4000000358f,  0.1686387658f },
                /* 32-bit */  {   15,   0.4000000358f,  0.1686387658f },
        },{
                /*  4-bit */  {   23,   0.4000000358f,  0.1670592725f },
                /*  8-bit */  {   15,   0.4000000358f,  0.1670592725f },
                /* 16-bit */  {   15,   0.4000000358f,  0.1670592725f },
                /* 32-bit */  {   15,   0.4000000358f,  0.1670592725f },
        },{
                /*  4-bit */  {   23,   0.4000000358f,  0.1668743342f },
                /*  8-bit */  {   15,   0.4000000358f,  0.1668743342f },
                /* 16-bit */  {   15,   0.4000000358f,  0.1668743342f },
                /* 32-bit */  {   15,   0.4000000358f,  0.1668743342f },
        },{
                /*  4-bit */  {   22,   0.4000000358f,  0.1669386178f },
                /*  8-bit */  {   15,   0.4000000358f,  0.1669386178f },
                /* 16-bit */  {   14,   0.4000000358f,  0.1669386178f },
                /* 32-bit */  {   14,   0.4000000358f,  0.1669386178f },
        },{
                /*  4-bit */  {   24,   0.4000000358f,  0.1667446643f },
                /*  8-bit */  {   15,   0.4000000358f,  0.1667446643f },
                /* 16-bit */  {   15,   0.4000000358f,  0.1667446643f },
                /* 32-bit */  {   15,   0.4000000358f,  0.1667446643f },
        },{
                /*  4-bit */  {   24,   0.4000000358f,  0.1663845032f },
                /*  8-bit */  {   16,   0.4000000358f,  0.1663845032f },
                /* 16-bit */  {   16,   0.4000000358f,  0.1663845032f },
                /* 32-bit */  {   16,   0.4000000358f,  0.1663845032f },
        },{
                /*  4-bit */  {   25,   0.4000000358f,  0.1668386161f },
                /*  8-bit */  {   16,   0.4000000358f,  0.1668386161f },
                /* 16-bit */  {   15,   0.4000000358f,  0.1668386161f },
                /* 32-bit */  {   15,   0.4000000358f,  0.1668386161f },
        },{
                /*  4-bit */  {   24,   0.4000000358f,  0.1688144654f },
                /*  8-bit */  {   15,   0.4000000358f,  0.1688144654f },
                /* 16-bit */  {   15,   0.4000000358f,  0.1688144654f },
                /* 32-bit */  {   15,   0.4000000358f,  0.1688144654f },
        },{
                /*  4-bit */  {   24,   0.4000000358f,  0.1681204289f },
                /*  8-bit */  {   15,   0.4000000358f,  0.1681204289f },
                /* 16-bit */  {   15,   0.4000000358f,  0.1681204289f },
                /* 32-bit */  {   15,   0.4000000358f,  0.1681204289f },
        },{
                /*  4-bit */  {   23,   0.4000000358f,  0.1677793711f },
                /*  8-bit */  {   15,   0.4000000358f,  0.1677793711f },
                /* 16-bit */  {   15,   0.4000000358f,  0.1677793711f },
                /* 32-bit */  {   15,   0.4000000358f,  0.1677793711f },
        },{
                /*  4-bit */  {   24,   0.4000000358f,  0.1675163954f },
                /*  8-bit */  {   15,   0.4000000358f,  0.1675163954f },
                /* 16-bit */  {   15,   0.4000000358f,  0.1675163954f },
                /* 32-bit */  {   15,   0.4000000358f,  0.1675163954f },
        },{
                /*  4-bit */  {   24,   0.4000000358f,  0.1673143506f },
                /*  8-bit */  {   15,   0.4000000358f,  0.1673143506f },
                /* 16-bit */  {   15,   0.4000000358f,  0.1673143506f },
                /* 32-bit */  {   15,   0.4000000358f,  0.1673143506f },
        },{
                /*  4-bit */  {   24,   0.4000000358f,  0.1682097316f },
                /*  8-bit */  {   15,   0.4000000358f,  0.1682097316f },
                /* 16-bit */  {   15,   0.4000000358f,  0.1682097316f },
                /* 32-bit */  {   15,   0.4000000358f,  0.1682097316f },
        },{
                /*  4-bit */  {   24,   0.4000000358f,  0.1679753661f },
                /*  8-bit */  {   16,   0.4000000358f,  0.1679753661f },
                /* 16-bit */  {   15,   0.4000000358f,  0.1679753661f },
                /* 32-bit */  {   15,   0.4000000358f,  0.1679753661f },
        }
};


experiment_setup_t gd_experiment_pure [] = {
        {
                /*  4-bit */  {    9,   0.3500000238f,  0.3616652191f },
                /*  8-bit */  {    5,   0.4000000358f,  0.3616652191f },
                /* 16-bit */  {    5,   0.4000000358f,  0.3616652191f },
                /* 32-bit */  {    5,   0.4000000358f,  0.3616652191f },
        },{
                /*  4-bit */  {    8,   0.3500000238f,  0.3440006375f },
                /*  8-bit */  {    4,   0.3500000238f,  0.3440006375f },
                /* 16-bit */  {    4,   0.3500000238f,  0.3440006375f },
                /* 32-bit */  {    4,   0.3500000238f,  0.3440006375f },
        },{
                /*  4-bit */  {    9,   0.3500000238f,  0.3609978855f },
                /*  8-bit */  {    5,   0.3500000238f,  0.3609978855f },
                /* 16-bit */  {    5,   0.3500000238f,  0.3609978855f },
                /* 32-bit */  {    5,   0.3500000238f,  0.3609978855f },
        },{
                /*  4-bit */  {    8,   0.3500000238f,  0.3587963879f },
                /*  8-bit */  {    4,   0.4000000358f,  0.3587963879f },
                /* 16-bit */  {    4,   0.4000000358f,  0.3587963879f },
                /* 32-bit */  {    4,   0.4000000358f,  0.3587963879f },
        },{
                /*  4-bit */  {   10,   0.3500000238f,  0.3345977366f },
                /*  8-bit */  {    5,   0.3500000238f,  0.3345977366f },
                /* 16-bit */  {    5,   0.3500000238f,  0.3345977366f },
                /* 32-bit */  {    5,   0.3500000238f,  0.3345977366f },
        },{
                /*  4-bit */  {    9,   0.3500000238f,  0.3458758593f },
                /*  8-bit */  {    4,   0.4000000358f,  0.3458758593f },
                /* 16-bit */  {    4,   0.4000000358f,  0.3458758593f },
                /* 32-bit */  {    4,   0.4000000358f,  0.3458758593f },
        },{
                /*  4-bit */  {    9,   0.3500000238f,  0.3497001827f },
                /*  8-bit */  {    4,   0.4000000358f,  0.3497001827f },
                /* 16-bit */  {    4,   0.4000000358f,  0.3497001827f },
                /* 32-bit */  {    4,   0.4000000358f,  0.3497001827f },
        },{
                /*  4-bit */  {    9,   0.3500000238f,  0.3429653943f },
                /*  8-bit */  {    4,   0.4000000358f,  0.3429653943f },
                /* 16-bit */  {    4,   0.4000000358f,  0.3429653943f },
                /* 32-bit */  {    4,   0.4000000358f,  0.3429653943f },
        },{
                /*  4-bit */  {    8,   0.3500000238f,  0.3433797657f },
                /*  8-bit */  {    4,   0.4000000358f,  0.3433797657f },
                /* 16-bit */  {    4,   0.4000000358f,  0.3433797657f },
                /* 32-bit */  {    4,   0.4000000358f,  0.3433797657f },
        },{
                /*  4-bit */  {    9,   0.3500000238f,  0.3441789746f },
                /*  8-bit */  {    4,   0.4000000358f,  0.3441789746f },
                /* 16-bit */  {    4,   0.4000000358f,  0.3441789746f },
                /* 32-bit */  {    4,   0.4000000358f,  0.3441789746f },
        },{
                /*  4-bit */  {   10,   0.3500000238f,  0.3441403210f },
                /*  8-bit */  {    5,   0.3500000238f,  0.3441403210f },
                /* 16-bit */  {    5,   0.3500000238f,  0.3441403210f },
                /* 32-bit */  {    5,   0.3500000238f,  0.3441403210f },
        },{
                /*  4-bit */  {   10,   0.3500000238f,  0.3423416317f },
                /*  8-bit */  {    5,   0.3500000238f,  0.3423416317f },
                /* 16-bit */  {    5,   0.3500000238f,  0.3423416317f },
                /* 32-bit */  {    5,   0.3500000238f,  0.3423416317f },
        },{
                /*  4-bit */  {    9,   0.3500000238f,  0.3458952308f },
                /*  8-bit */  {    4,   0.4000000358f,  0.3458952308f },
                /* 16-bit */  {    4,   0.4000000358f,  0.3458952308f },
                /* 32-bit */  {    4,   0.4000000358f,  0.3458952308f },
        },{
                /*  4-bit */  {    9,   0.3500000238f,  0.3485574722f },
                /*  8-bit */  {    4,   0.4000000358f,  0.3485574722f },
                /* 16-bit */  {    4,   0.4000000358f,  0.3485574722f },
                /* 32-bit */  {    4,   0.4000000358f,  0.3485574722f },
        },{
                /*  4-bit */  {    9,   0.3500000238f,  0.3438266218f },
                /*  8-bit */  {    4,   0.4000000358f,  0.3438266218f },
                /* 16-bit */  {    4,   0.4000000358f,  0.3438266218f },
                /* 32-bit */  {    4,   0.4000000358f,  0.3438266218f },
        },{
                /*  4-bit */  {   10,   0.3500000238f,  0.3411049843f },
                /*  8-bit */  {    5,   0.3500000238f,  0.3411049843f },
                /* 16-bit */  {    5,   0.3500000238f,  0.3411049843f },
                /* 32-bit */  {    5,   0.3500000238f,  0.3411049843f },
        },{
                /*  4-bit */  {    9,   0.4000000358f,  0.3449556530f },
                /*  8-bit */  {    5,   0.3500000238f,  0.3449556530f },
                /* 16-bit */  {    5,   0.3500000238f,  0.3449556530f },
                /* 32-bit */  {    5,   0.3500000238f,  0.3449556530f },
        },{
                /*  4-bit */  {   10,   0.3500000238f,  0.3433925211f },
                /*  8-bit */  {    5,   0.3500000238f,  0.3433925211f },
                /* 16-bit */  {    5,   0.3500000238f,  0.3433925211f },
                /* 32-bit */  {    5,   0.3500000238f,  0.3433925211f },
        },{
                /*  4-bit */  {   10,   0.3500000238f,  0.3444591463f },
                /*  8-bit */  {    5,   0.3500000238f,  0.3444591463f },
                /* 16-bit */  {    5,   0.3500000238f,  0.3444591463f },
                /* 32-bit */  {    5,   0.3500000238f,  0.3444591463f },
        }
};

experiment_setup_t iht_experiment_pure [] = {
        {
                /*  4-bit */  {    3,   0.0039072423f,  0.8114561439f },
                /*  8-bit */  {    2,   0.0048838025f,  0.8114561439f },
                /* 16-bit */  {    2,   0.0053720828f,  0.8114561439f },
                /* 32-bit */  {    2,   0.0053720828f,  0.8114561439f },
        },{
                /*  4-bit */  {    3,   0.0039072423f,  0.8114108443f },
                /*  8-bit */  {    3,   0.0019541210f,  0.8114108443f },
                /* 16-bit */  {    3,   0.0019541210f,  0.8114108443f },
                /* 32-bit */  {    3,   0.0019541210f,  0.8114108443f },
        },{
                /*  4-bit */  {    3,   0.0009775605f,  0.8326775432f },
                /*  8-bit */  {    2,   0.0009775605f,  0.8326775432f },
                /* 16-bit */  {    2,   0.0009775605f,  0.8326775432f },
                /* 32-bit */  {    2,   0.0009775605f,  0.8326775432f },
        },{
                /*  4-bit */  {    2,   0.0004892803f,  0.8221534491f },
                /*  8-bit */  {    2,   0.0004892803f,  0.8221534491f },
                /* 16-bit */  {    2,   0.0004892803f,  0.8221534491f },
                /* 32-bit */  {    2,   0.0004892803f,  0.8221534491f },
        },{
                /*  4-bit */  {    2,   0.0002451401f,  0.8266329765f },
                /*  8-bit */  {    2,   0.0002451401f,  0.8266329765f },
                /* 16-bit */  {    2,   0.0002451401f,  0.8266329765f },
                /* 32-bit */  {    2,   0.0002451401f,  0.8266329765f },
        },{
                /*  4-bit */  {    3,   0.0001230701f,  0.8252738118f },
                /*  8-bit */  {    2,   0.0001841051f,  0.8252738118f },
                /* 16-bit */  {    2,   0.0001841051f,  0.8252738118f },
                /* 32-bit */  {    2,   0.0001841051f,  0.8252738118f },
        },{
                /*  4-bit */  {    3,   0.0001230701f,  0.8266830444f },
                /*  8-bit */  {    2,   0.0001230701f,  0.8266830444f },
                /* 16-bit */  {    2,   0.0001230701f,  0.8266830444f },
                /* 32-bit */  {    2,   0.0001230701f,  0.8266830444f },
        },{
                /*  4-bit */  {    2,   0.0001230701f,  0.8361249566f },
                /*  8-bit */  {    2,   0.0001230701f,  0.8361249566f },
                /* 16-bit */  {    2,   0.0001230701f,  0.8361249566f },
                /* 32-bit */  {    2,   0.0001230701f,  0.8361249566f },
        },{
                /*  4-bit */  {    3,   0.0000925526f,  0.8278300166f },
                /*  8-bit */  {    2,   0.0000925526f,  0.8278300166f },
                /* 16-bit */  {    2,   0.0000925526f,  0.8278300166f },
                /* 32-bit */  {    2,   0.0000925526f,  0.8278300166f },
        },{
                /*  4-bit */  {    2,   0.0000620350f,  0.8329896331f },
                /*  8-bit */  {    2,   0.0000620350f,  0.8329896331f },
                /* 16-bit */  {    2,   0.0000620350f,  0.8329896331f },
                /* 32-bit */  {    2,   0.0000620350f,  0.8329896331f },
        },{
                /*  4-bit */  {    2,   0.0000620350f,  0.8310191035f },
                /*  8-bit */  {    2,   0.0000620350f,  0.8310191035f },
                /* 16-bit */  {    2,   0.0000620350f,  0.8310191035f },
                /* 32-bit */  {    2,   0.0000620350f,  0.8310191035f },
        },{
                /*  4-bit */  {    3,   0.0000620350f,  0.8242282867f },
                /*  8-bit */  {    2,   0.0000620350f,  0.8242282867f },
                /* 16-bit */  {    2,   0.0000620350f,  0.8242282867f },
                /* 32-bit */  {    2,   0.0000620350f,  0.8242282867f },
        },{
                /*  4-bit */  {    2,   0.0000620350f,  0.8329790235f },
                /*  8-bit */  {    2,   0.0000620350f,  0.8329790235f },
                /* 16-bit */  {    2,   0.0000620350f,  0.8329790235f },
                /* 32-bit */  {    2,   0.0000620350f,  0.8329790235f },
        },{
                /*  4-bit */  {    2,   0.0000467763f,  0.8302792907f },
                /*  8-bit */  {    2,   0.0000620350f,  0.8302792907f },
                /* 16-bit */  {    2,   0.0000620350f,  0.8302792907f },
                /* 32-bit */  {    2,   0.0000620350f,  0.8302792907f },
        },{
                /*  4-bit */  {    2,   0.0000315175f,  0.8335943818f },
                /*  8-bit */  {    2,   0.0000467763f,  0.8335943818f },
                /* 16-bit */  {    2,   0.0000467763f,  0.8335943818f },
                /* 32-bit */  {    2,   0.0000467763f,  0.8335943818f },
        },{
                /*  4-bit */  {    2,   0.0000315175f,  0.8292207122f },
                /*  8-bit */  {    2,   0.0000467763f,  0.8292207122f },
                /* 16-bit */  {    2,   0.0000467763f,  0.8292207122f },
                /* 32-bit */  {    2,   0.0000467763f,  0.8292207122f },
        },{
                /*  4-bit */  {    2,   0.0000315175f,  0.8310888410f },
                /*  8-bit */  {    2,   0.0000315175f,  0.8310888410f },
                /* 16-bit */  {    2,   0.0000315175f,  0.8310888410f },
                /* 32-bit */  {    2,   0.0000315175f,  0.8310888410f },
        },{
                /*  4-bit */  {    2,   0.0000315175f,  0.8381473422f },
                /*  8-bit */  {    2,   0.0000315175f,  0.8381473422f },
                /* 16-bit */  {    2,   0.0000315175f,  0.8381473422f },
                /* 32-bit */  {    2,   0.0000315175f,  0.8381473422f },
        },{
                /*  4-bit */  {    2,   0.0000315175f,  0.8354013562f },
                /*  8-bit */  {    2,   0.0000315175f,  0.8354013562f },
                /* 16-bit */  {    2,   0.0000315175f,  0.8354013562f },
                /* 32-bit */  {    2,   0.0000315175f,  0.8354013562f },
        }
};


experiment_setup_t * setup_IHT_experiment_mixed()
{
    return iht_experiment_mixed;
}

experiment_setup_t * setup_GD_experiment_mixed()
{
    return gd_experiment_mixed;
}

experiment_setup_t * setup_IHT_experiment_pure()
{
    return iht_experiment_pure;
}

experiment_setup_t * setup_GD_experiment_pure()
{
    return gd_experiment_pure;
}


void initialize_random_IHT_values(
        CloverVector32 &x_32,
        CloverMatrix32 &Phi_32,
        CloverVector32 &y_32,
        uint64_t &K
) {
    //
    // Let's get some deterministic keys
    //
    __m256i key1, key2;
    avx_xorshift128plus_init(445560390295639063UL, 2935984234003016713UL, key1, key2);

    const uint64_t m = Phi_32.getRows();
    const uint64_t n = Phi_32.getCols();
    //
    // Initialize Phi matrix with random elements
    //
    Phi_32.setRandomFloats(-1, 1, key1, key2);
    //
    // Let's get some random data so we can do permutation right
    //
    float *random_floats = new float[n];
    create_array_of_random_values(random_floats, n, key1, key2);
    //
    // Set K values of x to 1 while the rest are zeros and create a random permutation
    // x is our "hidden" variable
    //
    x_32.clear();
    float *x_arr = x_32.getData();
    for (uint64_t i = 0; i < K; i += 1) {
        x_arr[i] = 1;
    }
    for (uint64_t i = 0; i < n - 1; i += 1) {
        uint64_t j = (uint64_t) roundf(i * random_floats[i]);
        float tmp = x_arr[i];
        x_arr[i] = x_arr[j];
        x_arr[j] = tmp;
    }
    //
    // Clear the random floats
    //
    delete[] random_floats;
    //
    // Let's now generate y with the data that we have:
    //
    Phi_32.mvm_parallel(x_32, y_32);
}

void initialize_random_GD_values(
        CloverVector32 &x_32,
        CloverMatrix32 &Phi_32,
        CloverVector32 &y_32
) {
    //
    // Let's get some deterministic keys
    //
    __m256i key1, key2;
    avx_xorshift128plus_init(445560390295639063UL, 2935984234003016713UL, key1, key2);

    const uint64_t m = Phi_32.getRows();
    const uint64_t n = Phi_32.getCols();
    //
    // Initialize Phi matrix with random elements
    //
    Phi_32.setRandomFloats(-1, 1, key1, key2);
    //
    // Normalize rows of Phi
    //
    for (uint64_t  i = 0; i < m; i += 1) {
        float scale = (float) (1.0 / norm2(Phi_32, i));
        for (uint64_t j = 0; j < n; j++) {
            Phi_32.set(i, j, scale * Phi_32.get(i, j));
        }
    }
    x_32.setRandomFloats(-1, 1, key1, key2);
    float *x_arr = x_32.getData();
    for (uint64_t i = 0; i < n; i += 1) {
        if (x_arr[i] < 0) {
            x_arr[i] = -1;
        } else if (x_arr[i] >= 0) {
            x_arr[i] = 1;
        }
    }
    //
    // Let's now generate y with the data that we have:
    //
    Phi_32.mvm_parallel(x_32, y_32);
}
